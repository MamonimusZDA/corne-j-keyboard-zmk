#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        bt_encoder: bt_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BT_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };

        none_encoder: none_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NONE_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&none>, <&none>;
        };

        arrow_pag_up: arrow_pag_up {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_UP";
            bindings = <&kp UP_ARROW>, <&kp PAGE_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        arrow_pag_down: arrow_pag_down {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_DOWN";
            bindings = <&kp DOWN_ARROW>, <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        arrow_pag_up_arrow_right: arrow_pag_up_arrow_right {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_UP_ARROW_RIGHT";
            bindings = <&arrow_pag_up>, <&kp RIGHT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        arrow_pag_down_arrow_left: arrow_pag_down_arrow_left {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_DOWN_ARROW_LEFT";
            bindings = <&arrow_pag_down>, <&kp LEFT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        arrow_pag_up_arrow_right_in: arrow_pag_up_arrow_right_in {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_UP_ARROW_RIGHT_IN";
            bindings = <&arrow_pag_up_arrow_right>, <&kp RC(EQUAL)>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL)>;
        };

        arrow_pag_down_arrow_left_out: arrow_pag_down_arrow_left_out {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_PAG_DOWN_ARROW_LEFT_OUT";
            bindings = <&arrow_pag_down_arrow_left>, <&kp RC(MINUS)>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL)>;
        };

        arrow_pag_zoom_encoder: arrow_pag_zoom_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ARROW_PAG_ZOOM_ENCODER";
            #sensor-binding-cells = <0>;
            bindings =
                <&arrow_pag_up_arrow_right_in>,
                <&arrow_pag_down_arrow_left_out>;
        };

        vol_bl_inc: vol_bl_inc {
            compatible = "zmk,behavior-mod-morph";
            label = "VOL_BL_INC";
            bindings = <&kp C_VOLUME_UP>, <&kp C_BRIGHTNESS_INC>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        vol_bl_dec: vol_bl_dec {
            compatible = "zmk,behavior-mod-morph";
            label = "VOL_BL_DEC";
            bindings = <&kp C_VOLUME_DOWN>, <&kp C_BRIGHTNESS_DEC>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        vol_bl: vol_bl {
            compatible = "zmk,behavior-sensor-rotate";
            label = "VOL_BL";
            #sensor-binding-cells = <0>;
            bindings = <&vol_bl_inc>, <&vol_bl_dec>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <22 23>;
        };

        Caps {
            bindings = <&kp CAPS>;
            key-positions = <35 36>;
            layers = <0>;
        };

        RAlt_1 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <34 35>;
        };

        RAlt_2 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <30 29>;
        };

        Del {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
            layers = <0>;
        };

        RGui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <21 22>;
        };

        Menu {
            bindings = <&kp C_MENU>;
            key-positions = <15 16>;
            layers = <0>;
        };

        Contex_menu {
            bindings = <&kp K_CONTEXT_MENU>;
            key-positions = <2 3>;
            layers = <0>;
        };

        LGui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <17 16>;
        };

        Caps_word {
            bindings = <&caps_word>;
            key-positions = <28 29>;
            layers = <0>;
        };
    };

    macros {
        email_1: email_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp M &kp S &kp UNDER &kp A &kp L &kp E &kp J &kp A &kp N &kp D &kp R &kp O &kp AT &kp H &kp O &kp T &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL_1";
        };

        email_2: email_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp E &kp L &kp M &kp I &kp N &kp E &kp C &kp R &kp A &kp F &kp T &kp I &kp A &kp N &kp O &kp N1 &kp N2 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL_2";
        };

        email_3: email_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N9 &kp N7 &kp O &kp N0 &kp N0 &kp N7 &kp N9 &kp N0 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL_3";
        };

        name: name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp O &kp R &kp G &kp E &kp SPACE &kp LS(A) &kp L &kp E &kp J &kp A &kp N &kp D &kp R &kp O &kp SPACE &kp LS(M) &kp O &kp T &kp A &kp SPACE &kp LS(S) &kp O &kp S &kp A>;
            label = "NAME";
        };

        name_rev: name_rev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(M) &kp O &kp T &kp A &kp SPACE &kp LS(S) &kp O &kp S &kp A &kp SPACE &kp LS(J) &kp O &kp R &kp G &kp E &kp SPACE &kp LS(A) &kp L &kp E &kp J &kp A &kp N &kp D &kp R &kp O>;
            label = "NAME_REV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            display-name = "DVORAK";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp TAB         &kp SQT        &kp COMMA     &kp PERIOD  &kp P  &kp Y          &kp UP_ARROW     &kp F  &kp G        &kp C         &kp R  &kp L  &kp BSPC
&kp RCTRL       &kp A          &kp O         &kp E       &kp U  &kp I          &kp DOWN_ARROW   &kp D  &kp H        &kp T         &kp N  &kp S  &kp RCTRL
&kp LEFT_SHIFT  &kp SEMICOLON  &kp Q         &kp J       &kp K  &kp X          &kp LEFT_ARROW   &kp B  &kp M        &kp W         &kp V  &kp Z  &kp RIGHT_SHIFT
                               &lt 6 C_MUTE  &kp LGUI    &mo 1  &lt 2 ENTER    &kp RIGHT_ARROW  &mo 3  &lt 4 SPACE  &kp LEFT_ALT
                                                                               &tog 5
            >;

            label = "DVORAK";
            sensor-bindings = <&vol_bl>;
        };

        Numbers_and_symbols {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE             &kp QUESTION  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp CARET    &kp AMPERSAND    &kp PAGE_UP    &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp EQUAL
&mt LCTRL RA(SLASH)   &kp PERCENT   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN  &kp BACKSLASH    &kp PAGE_DOWN  &kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0        &mt RCTRL RA(NUMBER_1)
&mt LEFT_SHIFT GRAVE  &kp EXCL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR   &kp PIPE         &kp HOME       &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp HASH      &kp UNDERSCORE
                                    &none                 &none                  &none        &none            &kp END        &none      &none         &none
                                                                                                               &none
            >;

            label = "NUMERIC";
            sensor-bindings = <&none_encoder>;
        };

        Functions {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp INSERT  &kp C_PREVIOUS         &kp C_PLAY_PAUSE  &kp C_NEXT    &kp PRINTSCREEN    &mmv MOVE_UP     &email_1  &kp F9     &kp F10  &kp F11  &kp F12  &none
&trans  &mkp MB4    &mkp LCLK              &mkp MCLK         &mkp RCLK     &mkp MB5           &mmv MOVE_DOWN   &email_2  &kp F5     &kp F6   &kp F7   &kp F8   &trans
&trans  &none       &kp C_AL_FILE_BROWSER  &kp K_CALCULATOR  &kp C_AL_WWW  &none              &mmv MOVE_LEFT   &email_3  &kp F1     &kp F2   &kp F3   &kp F4   &trans
                    &none                  &trans            &none         &none              &mmv MOVE_RIGHT  &name     &name_rev  &trans
                                                                                              &none
            >;

            label = "FN";
            sensor-bindings = <&none_encoder>;
        };

        Scroll {
            bindings = <
&none   &none  &none         &none  &none  &none    &none  &none  &none         &none           &none  &none  &none
&trans  &none  &none         &none  &none  &none    &none  &none  &msc MOVE_UP  &msc MOVE_DOWN  &none  &none  &trans
&trans  &none  &none         &none  &none  &none    &none  &none  &none         &none           &none  &none  &trans
               &kp LEFT_ALT  &none  &none  &none    &none  &none  &none         &none
                                                    &none
            >;

            sensor-bindings = <&arrow_pag_zoom_encoder>;
            label = "SCROLL";
        };

        Bluetooth {
            bindings = <
&none  &none  &none       &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none       &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none       &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
              &bt BT_CLR  &none  &none  &none    &none  &none  &none  &none
                                                 &none
            >;

            sensor-bindings = <&bt_encoder>;
            label = "BLUETOOTH";
        };

        Keyboard_configuration {
            bindings = <
&none  &none  &none            &none  &none  &none    &rgb_ug RGB_SPI  &none       &none       &none       &none  &none  &none
&none  &none  &none            &none  &none  &none    &rgb_ug RGB_SPD  &none       &none       &none       &none  &none  &none
&none  &none  &none            &none  &none  &none    &rgb_ug RGB_EFR  &none       &none       &none       &none  &none  &none
              &rgb_ug RGB_TOG  &none  &none  &none    &rgb_ug RGB_EFF  &bl BL_INC  &bl BL_DEC  &bl BL_TOG
                                                      &trans
            >;

            label = "CONFIG";
            sensor-bindings = <&rgb_encoder>;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
