#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        bt_profile: bt_profile {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BT_PROFILE";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <22 23>;
        };

        Caps {
            bindings = <&kp CAPS>;
            key-positions = <16 15>;
        };

        RAlt_1 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <34 35>;
        };

        RAlt_2 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <30 29>;
        };

        Del {
            bindings = <&kp DELETE>;
            key-positions = <28 29>;
        };

        Gui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <35 36>;
        };

        Menu {
            bindings = <&kp C_MENU>;
            key-positions = <2 3>;
        };

        Contex_menu {
            bindings = <&kp K_CONTEXT_MENU>;
            key-positions = <9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Principal {
            display-name = "DVORAK";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp TAB         &kp SQT        &kp COMMA   &kp PERIOD  &kp P   &kp Y          &kp UP_ARROW     &kp F  &kp G      &kp C         &kp R  &kp L  &kp BSPC
&kp RCTRL       &kp A          &kp O       &kp E       &kp U   &kp I          &kp DOWN_ARROW   &kp D  &kp H      &kp T         &kp N  &kp S  &kp RCTRL
&kp LEFT_SHIFT  &kp SEMICOLON  &kp Q       &kp J       &kp K   &kp X          &kp LEFT_ARROW   &kp B  &kp M      &kp W         &kp V  &kp Z  &kp RIGHT_SHIFT
                               &kp C_MUTE  &kp LGUI    &tog 2  &lt 1 ENTER    &kp RIGHT_ARROW  &mo 5  &kp SPACE  &kp LEFT_ALT
                                                                              &tog 3
            >;

            label = "DVORAK";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Numbers_and_symbols {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp PIPE      &kp AMPERSAND    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp CARET    &kp TILDE               &trans  &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp EQUAL
&trans        &kp PERCENT      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN  &kp NON_US_BACKSLASH    &trans  &kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0        &trans
&kp QUESTION  &kp EXCLAMATION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR   &kp GRAVE               &trans  &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp HASH      &kp UNDERSCORE
                               &trans                &trans                 &trans       &trans                  &trans  &trans     &trans        &trans
                                                                                                                 &trans
            >;

            label = "NUM-SYM";
            sensor-bindings = <&scroll_encoder>;
        };

        Functions {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans      &trans            &trans      &trans      &mmv MOVE_UP     &kp K_CALC             &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &none   &mkp LCLK   &mkp MCLK         &mkp RCLK   &mkp MB4    &mmv MOVE_DOWN   &kp C_AL_FILE_BROWSER  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &none   &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &mkp MB5    &mmv MOVE_LEFT   &kp C_AL_WWW           &kp F1  &kp F2   &kp F3   &kp F4   &trans
                &none       &trans            &trans      &trans      &mmv MOVE_RIGHT  &trans                 &trans  &trans
                                                                      &trans
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };

        Principal_mod1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME       &trans  &trans  &trans  &trans  &trans  &trans
                &mo 4   &trans  &trans  &trans    &kp END        &trans  &trans  &trans
                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
            label = "[DVORAK]";
        };

        Principal_mod2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_HUI  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_HUD  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_SAD  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &rgb_ug RGB_SAI  &trans  &trans  &trans
                                                  &rgb_ug RGB_TOG
            >;

            sensor-bindings = <&rgb_encoder>;
            label = "(DVORAK)";
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &bt BT_CLR  &trans  &trans  &trans    &trans  &trans  &trans  &trans
                                                      &trans
            >;

            sensor-bindings = <&bt_profile>;
            label = "BLUETOOTH";
        };
    };
};
